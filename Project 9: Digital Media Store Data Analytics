--This project is using a database called chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers. I will try to use this set to demonstrate my data analytics skills.

-- 1. Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT
    FirstName || ' ' || LastName AS [Full Name],
    CustomerId,
    Country
FROM
    customers
WHERE
    Country <> 'USA'
;

-- 2. Show only the Customers from Brazil.
SELECT
    FirstName || ' ' || LastName AS [Full Name],
    CustomerId,
    Country
FROM
    customers
WHERE
    Country = 'Brazil'
;

-- 3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT
    c.FirstName || ' ' || c.LastName AS [Full Name],
    i.InvoiceId,
    i.InvoiceDate,
    i.BillingCountry
FROM
    invoices i
    LEFT JOIN customers c ON i.invoiceId = c.CustomerId
WHERE
    i.BillingCountry = 'Brazil'
;

-- 4. Show the Employees who are Sales Agents.
SELECT
    *
FROM
    employees
WHERE
    Title = 'Sales Support Agent'
;

-- 5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT
    DISTINCT BillingCountry
FROM
    invoices
;

-- 6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT
    e.FirstName || ' ' || e.LastName AS [Employee Full Name],
    i.invoiceId
FROM
    invoices i
    JOIN customers c ON i.CustomerId = c.CustomerId
    JOIN employees e ON e. EmployeeId = c.SupportRepId
;

-- 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT
    i.Total,
    c.FirstName || ' ' || c.LastName AS [Customer Name],
    c.Country,
    e.FirstName || ' ' || e.LastName AS [Employee Full Name]
FROM
      invoices i
      JOIN customers c ON i.CustomerId = c.CustomerId
      JOIN employees e ON e. EmployeeId = c.SupportRepId
;


-- 8. How many Invoices were there in 2009?
SELECT
    COUNT(*) AS [Total Invoices]
FROM
    invoices
WHERE
    InvoiceDate LIKE '2009%'
;

-- 9. What are the total sales for 2009?
SELECT
    ROUND(SUM(total), 2) AS [2009 Total Sales]
FROM
    invoices
WHERE
    InvoiceDate LIKE '2009%'
;

-- 10. Write a query that includes the purchased track name with each invoice line ID.
SELECT
    i.invoiceid AS [Invoice ID],
    t.name AS [Track Name]
FROM
    invoices i
    JOIN invoice_items it ON it.invoiceid = i.invoiceid
    JOIN tracks t ON t.TrackId = it.TrackId
ORDER BY
    [Invoice ID]
;

-- 11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT
    i.invoiceid AS [Invoice ID],
    t.name AS [Track Name],
    t.Name AS [Artist Name]
FROM
    invoices i
    JOIN invoice_items it ON it.invoiceid = i.invoiceid
    JOIN tracks t ON t.TrackId = it.TrackId
ORDER BY
    [Invoice ID]
;

-- 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT
    t.Name AS [Track Name],
    a.Title AS [Album Name],
    mt.Name AS [Genre]
FROM
    genres g
    JOIN tracks t ON g.GenreId = t.GenreId
    JOIN albums a ON a.AlbumId = t.AlbumId
    JOIN media_types mt ON mt.MediaTypeId = t.MediaTypeId

-- 13. Show the total sales made by each sales agent.
SELECT
    e.FirstName||' '||e.LastName AS [Sales Agent],
    ROUND(SUM(i.total), 2) AS [Total Sales]
FROM
    invoices i
    JOIN customers c ON i.CustomerId = c.CustomerId
    JOIN employees e ON e.EmployeeId = c.SupportRepId
GROUP BY
    [Sales Agent]
;

-- 14. Which sales agent made the most dollars in sales in 2009?
SELECT
    e.FirstName||' '||e.LastName AS [Sales Agent],
    ROUND(SUM(i.total), 2) AS [Total Sales]
FROM
    invoices i
    JOIN customers c ON i.CustomerId = c.CustomerId
    JOIN employees e ON e.EmployeeId = c.SupportRepId
WHERE
    e.title = 'Sales Support Agent'
    AND
    i.InvoiceDate LIKE '2009%'
GROUP BY
    [Sales Agent]
ORDER BY [Total Revenue] DESC
    
LIMIT
    1
;
