#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

#1. How many orders were placed in January?
SELECT
  COUNT(orderID)
FROM
    BIT_DB.JanSales    
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID';

#2. How many of those orders were for an iPhone?
SELECT 
    COUNT(product)
FROM
    BIT_DB.JanSales
WHERE
    product = 'iPhone';

#3. Select the customer account numbers (acctnum) for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM
    BIT_DB.FebSales f
INNER JOIN
    BIT_DB.customers c
ON
    f.orderID = c.order_id
WHERE
    length(orderid)=6
AND
    orderid<> 'Order ID';
    
#4. Which product was the cheapest one sold in January, and what was the price?
SELECT
    MIN(price), Product
FROM
    BIT_DB.JanSales;
    

#OR

SELECT
    MIN(price), Product
FROM
    BIT_DB.JanSales
ORDER BY
    price ASC
LIMIT
    1;
    
#5. What is the total revenue for each product sold in January?
SELECT
    product, SUM(quantity)*price AS total_revenue
FROM 
    BIT_DB.JanSales
GROUP BY
    product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT
    product,
    SUM(quantity) AS total_quantity, SUM(quantity)*price AS total_revenue
FROM
    BIT_DB.FebSales
WHERE
    location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;


#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT
    COUNT(DISTINCT c.acctnum) AS total_customers,
     AVG(f.quantity)*price AS average_expense
 FROM
     BIT_DB.FebSales f
 LEFT JOIN
     BIT_DB.customers c
 ON
     c.order_id = f.orderID
WHERE
     f.quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

#8 List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT
    Product,
    SUM(Quantity)
FROM
    BIT_DB.FebSales
WHERE
    location like '%Los Angeles%'
GROUP BY Product;
